/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html{
  line-height:1.15;
  -webkit-text-size-adjust:100%;
}
body{
  margin:0;
}
main{
  display:block;
}
h1{
  font-size:2em;
  margin:0.67em 0;
}
hr{
  box-sizing:content-box;
  height:0;
  overflow:visible;
}
pre{
  font-family:monospace, monospace;
  font-size:1em;
}
a{
  background-color:transparent;
}
abbr[title]{
  border-bottom:none;
  text-decoration:underline;
  text-decoration:underline dotted;
}
b,
strong{
  font-weight:bolder;
}
code,
kbd,
samp{
  font-family:monospace, monospace;
  font-size:1em;
}
small{
  font-size:80%;
}
sub,
sup{
  font-size:75%;
  line-height:0;
  position:relative;
  vertical-align:baseline;
}

sub{
  bottom:-0.25em;
}

sup{
  top:-0.5em;
}
img{
  border-style:none;
}
button,
input,
optgroup,
select,
textarea{
  font-family:inherit;
  font-size:100%;
  line-height:1.15;
  margin:0;
}
button,
input{
  overflow:visible;
}
button,
select{
  text-transform:none;
}
button,
[type=button],
[type=reset],
[type=submit]{
  -webkit-appearance:button;
}
button::-moz-focus-inner,
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner{
  border-style:none;
  padding:0;
}
button:-moz-focusring,
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring{
  outline:1px dotted ButtonText;
}
fieldset{
  padding:0.35em 0.75em 0.625em;
}
legend{
  box-sizing:border-box;
  color:inherit;
  display:table;
  max-width:100%;
  padding:0;
  white-space:normal;
}
progress{
  vertical-align:baseline;
}
textarea{
  overflow:auto;
}
[type=checkbox],
[type=radio]{
  box-sizing:border-box;
  padding:0;
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button{
  height:auto;
}
[type=search]{
  -webkit-appearance:textfield;
  outline-offset:-2px;
}
[type=search]::-webkit-search-decoration{
  -webkit-appearance:none;
}
::-webkit-file-upload-button{
  -webkit-appearance:button;
  font:inherit;
}
details{
  display:block;
}
summary{
  display:list-item;
}
template{
  display:none;
}
[hidden]{
  display:none;
}

@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Bold.eot");
  src:local("TT Norms Bold"), local("TTNorms-Bold"), url("../fonts/TTNorms-Bold.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Bold.woff2") format("woff2"), url("../fonts/TTNorms-Bold.woff") format("woff"), url("../fonts/TTNorms-Bold.ttf") format("truetype");
  font-weight:bold;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Medium.eot");
  src:local("TT Norms Medium"), local("TTNorms-Medium"), url("../fonts/TTNorms-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Medium.woff2") format("woff2"), url("../fonts/TTNorms-Medium.woff") format("woff"), url("../fonts/TTNorms-Medium.ttf") format("truetype");
  font-weight:500;
  font-style:normal;
}
@font-face{
  font-family:"TT Norms";
  src:url("../fonts/TTNorms-Regular.eot");
  src:local("TT Norms Regular"), local("TTNorms-Regular"), url("../fonts/TTNorms-Regular.eot?#iefix") format("embedded-opentype"), url("../fonts/TTNorms-Regular.woff2") format("woff2"), url("../fonts/TTNorms-Regular.woff") format("woff"), url("../fonts/TTNorms-Regular.ttf") format("truetype");
  font-weight:normal;
  font-style:normal;
}
.page-header__grid, .container{
  width:min(100% - 40px, 1320px);
  margin-inline:auto;
}

.service-dot-1:checked ~ .services__options-checks #serv-opt1, .service-dot-2:checked ~ .services__options-checks #serv-opt2, .service-dot-3:checked ~ .services__options-checks #serv-opt3, .service-dot-4:checked ~ .services__options-checks #serv-opt4{
  position:relative;
  color:#f0145a;
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  background-clip:text;
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  border-right:4px solid #f0145a;
  z-index:1;
  transition:0.3s;
  padding-right:36px;
}

.service-dot-1:hover ~ .services__options-checks #serv-opt1, .service-dot-2:hover ~ .services__options-checks #serv-opt2, .service-dot-3:hover ~ .services__options-checks #serv-opt3, .service-dot-4:hover ~ .services__options-checks #serv-opt4{
  color:#f0145a;
  background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
  background-clip:text;
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
}

*,
*::before,
*::after{
  box-sizing:border-box;
  margin:0;
  padding:0;
}

html{
  font-family:"TT Norms", sans-serif;
  font-size:16px;
}

a{
  text-decoration:none;
  color:#24a3ff;
}

.services__inner{
  padding-bottom:80px;
}

.visually-hidden{
  position:absolute;
  width:1px;
  height:1px;
  margin:-1px;
  border:0;
  padding:0;
  white-space:nowrap;
  clip-path:inset(100%);
  clip:rect(0 0 0 0);
  overflow:hidden;
}

.section-caption{
  font-size:42px;
  color:#f0145a;
  background:linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  background-clip:text;
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
}

.page-header{
  position:relative;
  background:linear-gradient(42deg, #323264 51%, #7a425e 87%);
}
.page-header__grid{
  position:absolute;
  z-index:2;
  right:0;
  left:0;
  display:grid;
  grid-template-columns:auto 1fr;
}
.page-header__logo{
  grid-area:logo;
}
.page-header__menu{
  grid-area:menu;
}
.page-header__actions{
  grid-area:actions;
}
.page-header__content{
  position:relative;
  display:flex;
  overflow:hidden;
  align-items:center;
  justify-content:center;
  min-height:100vh;
}
.page-header__content::after{
  z-index:1;
  content:"";
  background:linear-gradient(180deg, transparent 17%, #323264 100%);
  position:absolute;
  top:calc(100% - 200px);
  right:0;
  bottom:0;
  left:0;
}
.page-header__content-title{
  position:absolute;
  z-index:1;
  top:50%;
  left:50%;
  width:min(100% - 40px, 620px);
  margin:0;
  transform:translate(-50%, -50%);
  text-align:center;
  color:#ffffff;
  font-size:38px;
  font-weight:500;
  line-height:45px;
}
.page-header__content-image{
  height:93vh;
  transform:translate(4px, 35.1%);
}
.page-header__button{
  position:absolute;
  z-index:2;
  bottom:20px;
  left:50%;
  cursor:pointer;
  transform:translateX(-50%);
}

.menu__btn{
  position:relative;
  width:30px;
  height:22.5px;
  margin-left:auto;
  cursor:pointer;
  transition:0.5s ease-in-out;
  transform:rotate(0deg);
}
.menu__btn-row{
  position:absolute;
  left:0;
  display:block;
  width:100%;
  height:3px;
  transition:0.25s ease-in-out;
  transform:rotate(0deg);
  opacity:1;
  border-radius:3px;
  background:#ffffff;
}
.menu__btn-row:nth-child(1){
  top:0;
}
.menu__btn-row:nth-child(2), .menu__btn-row:nth-child(3){
  top:9px;
}
.menu__btn-row:nth-child(4){
  top:18px;
}
.menu__btn.-active span:nth-child(1){
  top:9px;
  left:50%;
  width:0;
}
.menu__btn.-active span:nth-child(2){
  transform:rotate(45deg);
}
.menu__btn.-active span:nth-child(3){
  transform:rotate(-45deg);
}
.menu__btn.-active span:nth-child(4){
  top:9px;
  left:50%;
  width:0;
}
.menu__list{
  font-size:18px;
  margin:0;
  padding:0;
  list-style:none;
}
.menu__link{
  display:block;
  color:#ffffff;
}
.menu__link.-active{
  color:#f0145a;
}
.menu__link:hover{
  color:#f0145a;
  transition:0.3s;
}

.actions{
  display:flex;
  align-items:center;
  gap:20px;
}
.actions__languages{
  display:flex;
  letter-spacing:1px;
  font-size:12px;
  font-weight:700;
  gap:3px;
}
.actions__languages-link{
  padding:5px 6px;
  border-radius:8px;
}
.actions__languages-link.-active{
  color:#ffffff;
  background-color:#f0145a;
}
.actions__languages-link:hover{
  background-color:#ededf7;
  color:#b3b3ba;
}
.actions__locations{
  font-style:normal;
}
.actions__phones{
  font-weight:bold;
}
.actions__socials-image{
  fill:#ffffff;
}
.actions__socials-image:hover{
  fill:#24a3ff;
  transition:0.3s;
}

.abilities{
  background:linear-gradient(228.57deg, #323264 11.93%, #323264 57.17%, #643E72 87.46%);
  padding:80px 0;
  border-radius:0px 0px 12px 12px;
  position:relative;
}
.abilities::after{
  content:"";
  position:absolute;
  height:10px;
  left:50%;
  transform:translateX(-50%);
  border-radius:0 0 12px 12px;
  bottom:-10px;
  width:97%;
  background-color:#cacadb;
}
.abilities::before{
  content:"";
  position:absolute;
  height:10px;
  left:50%;
  transform:translateX(-50%);
  border-radius:0 0 12px 12px;
  bottom:-20px;
  width:94.5%;
  background-color:#e7e7f2;
}

.services__option{
  font-size:42px;
  line-height:3.125rem;
  display:block;
  font-weight:700;
  color:#b3b3ba;
  cursor:pointer;
  text-align:right;
  padding-right:40px;
  border-right:4px solid transparent;
}

.services__option + .services__option{
  padding-top:20px;
}

.service-dot{
  display:none;
  transition:0.3s;
}

.service-dot-1:checked ~ .services__slides #text1{
  display:block;
}

.service-dot-2:checked ~ .services__slides #text2{
  display:block;
}

.service-dot-3:checked ~ .services__slides #text3{
  display:block;
}

.service-dot-4:checked ~ .services__slides #text4{
  display:block;
}

.service-dot-1:checked ~ .mobile-dots #mobile-opt1{
  opacity:1;
}

.service-dot-2:checked ~ .mobile-dots #mobile-opt2{
  opacity:1;
}

.service-dot-3:checked ~ .mobile-dots #mobile-opt3{
  opacity:1;
}

.service-dot-4:checked ~ .mobile-dots #mobile-opt4{
  opacity:1;
}

.services__text{
  max-width:600px;
  padding-top:50px;
  display:none;
}

.services__heading{
  font-size:32px;
  line-height:2rem;
  color:#ffffff;
  margin-bottom:20px;
}

.services__descr{
  font-size:21px;
  line-height:1.875rem;
  color:#ffffff;
}

.services__options-checks{
  max-width:525px;
  position:relative;
  display:flex;
  flex-direction:column;
  align-items:flex-end;
}
.services__options-checks::after{
  content:"";
  position:absolute;
  border-right:4px solid #E6E6F0;
  top:0;
  right:0;
  bottom:0;
}

.services__options{
  display:flex;
  gap:40px;
}

.mobile-dots{
  display:none;
}
.mobile-dots__control{
  font-size:1px;
  color:transparent;
  height:16px;
  width:16px;
  background-color:#24a3ff;
  opacity:0.2;
  border-radius:50%;
}

.mobile-subheading{
  display:none;
}

.best__flex{
  display:flex;
  flex-wrap:wrap;
  gap:40px;
}

.best__item{
  max-width:413px;
}

.best__picture{
  margin-bottom:20px;
}

.best__item-caption{
  color:#24a3ff;
  font-size:24px;
  line-height:1.75rem;
  margin-bottom:15px;
}

.best__item-text{
  font-size:18px;
  line-height:1.625rem;
  color:#ffffff;
}

.best__link{
  letter-spacing:1px;
  color:#ffffff;
  opacity:0.5;
  margin-bottom:3px;
  text-transform:uppercase;
}
.best__link:hover{
  opacity:1;
}
.best__link:active{
  opacity:1;
}

.best__caption{
  max-width:max-content;
  margin-bottom:68px;
}

.slide{
  display:flex;
  gap:40px;
  background-color:#f5f5fa;
  border-radius:12px;
}
.slide__text{
  padding-top:40px;
}
.slide__links{
  margin-bottom:3px;
  font-weight:700;
  font-size:14px;
  text-transform:uppercase;
}
.slide__link:hover{
  color:#0085ff;
}
.slide__quote{
  max-width:827px;
  font-weight:700;
  font-size:42px;
  line-height:3.125rem;
  background:#f0145a;
  background:linear-gradient(90.13deg, #F0145A 0.84%, #EF8080 99.96%);
  background-clip:text;
  -webkit-background-clip:text;
  -webkit-text-fill-color:transparent;
  margin-bottom:20px;
}
.slide__author{
  color:#b3b3ba;
  display:flex;
  gap:10px;
  align-items:center;
}
.slide__author-image{
  display:none;
}
.slide__name{
  margin-bottom:5px;
  font-size:18px;
}
.slide__position{
  color:#b3b3ba;
}

.team{
  padding:60px 0 40px;
}

.team__actions{
  padding-top:20px;
  display:flex;
  justify-content:center;
  gap:14px;
}
.team__actions-dot{
  width:16px;
  height:16px;
  margin:0 7px;
  border:none;
  border-radius:50%;
  background-color:#24a3ff;
  opacity:0.2;
  cursor:pointer;
}
.team__actions-dot:hover{
  background-color:#24a3ff;
  opacity:0.6;
}
.team__actions-dot.active{
  background-color:#24a3ff;
  opacity:1;
}

.cases{
  padding-bottom:30px;
}

.cases__grid-first{
  display:grid;
  grid-template-columns:0.95fr 1fr 0.95fr;
  grid-template-rows:auto;
  gap:2px;
  grid-template-areas:"item-capt item-prep item-acomp2" "item-acomp item-prep item-acomp2";
  margin-bottom:2px;
}

.cases__grid-item{
  background-color:#f5f5fa;
  display:flex;
  flex-direction:column;
  justify-content:flex-end;
  padding:48px 20px 20px;
  transition:0.3s;
}
.cases__grid-item:hover{
  background-color:#ededf7;
}

.item-capt{
  grid-area:item-capt;
  color:#f0145a;
  font-size:14px;
  padding:20px;
  border-radius:12px 0 0 0;
}
.item-capt:hover{
  background-color:#f5f5fa;
}

.item-acomp{
  grid-area:item-acomp;
}

.item-prep{
  grid-area:item-prep;
}

.item-acomp2{
  grid-area:item-acomp2;
  border-radius:0 12px 0 0;
}

.cases__grid-caption{
  font-size:24px;
  line-height:1.75rem;
  color:#686887;
  margin-bottom:20px;
}

.cases__grid-link{
  font-size:18px;
  color:#b3b3ba;
}

.cases__grid-second{
  display:grid;
  grid-template-columns:1fr 1.4fr 1.7fr;
  gap:2px;
}

.item-repres{
  border-radius:0 0 0 12px;
}

.item-acomp3{
  border-radius:0 0 12px 0;
}

.clients__caption{
  text-align:center;
  font-size:14px;
  color:#323264;
  margin-bottom:30px;
  text-transform:uppercase;
}

.clients__grid{
  display:grid;
  grid-template-columns:1fr 1fr 1fr 1fr;
}
.clients__grid-picture{
  text-align:center;
}

.clients__grid-item{
  display:flex;
  justify-content:center;
  align-items:center;
  height:120px;
  padding:0 20px;
}

.item-hillel{
  background-color:#1C4280;
}

.item-wanna{
  background-color:#143646;
}

.item-tap{
  background-color:#F48B30;
}

.item-look{
  background-color:#9E4DC3;
}

.item-oran{
  background-color:#FD9339;
}

.item-adt{
  background-color:E2E2E4;
}

.item-click{
  background-color:#C71C36;
}

.item-eco{
  background-color:#DCF3F9;
}

.item-infa{
  background-color:#EAEAEA;
}

.item-city{
  background-color:#282240;
}

.item-art{
  background-color:#1D4568;
}

.item-ult{
  background-color:#000000;
}

.news{
  background-color:#f5f5fa;
  padding-top:40px;
}
.news__inner{
  height:882px;
  overflow:hidden;
  position:relative;
  padding-top:40px;
}
.news__links{
  font-size:14px;
  text-transform:uppercase;
  margin-bottom:3px;
}
.news__caption{
  max-width:max-content;
  margin-bottom:40px;
}

.news__content-item{
  margin-bottom:40px;
  border-radius:8px;
  background-color:#fff;
  overflow:hidden;
}

.news__image{
  width:100%;
}

.news__content-info{
  padding:20px;
}

.news__content-heading{
  font-size:18px;
  line-height:21px;
  color:#24a3ff;
  margin-bottom:10px;
}

.news__link:hover{
  color:#0085ff;
}

.news__link:active{
  color:#006ccf;
}

.news__content-date{
  font-weight:700;
  font-size:12px;
  color:#b3b3ba;
}

.news__content-date::after{
  margin:20px 0;
  display:block;
  width:100%;
  height:4px;
  content:"";
  background-color:#e6e6f0;
}

.news__content-descr{
  line-height:1.375rem;
}

.news__content{
  columns:3 413px;
  column-gap:40px;
}

.news__action{
  position:absolute;
  bottom:0;
  left:0;
  right:0;
  height:200px;
  background:-webkit-gradient(linear, left top, left bottom, from(rgba(245, 245, 250, 0)), color-stop(86.5%, #F5F5FA));
  background:linear-gradient(180deg, rgba(245, 245, 250, 0) 0%, #F5F5FA 86.5%);
}
.news__action-button{
  width:250px;
  position:absolute;
  left:50%;
  bottom:40px;
  transform:translateX(-50%);
  padding:16px 0;
  border:none;
  border-radius:12px;
  background-color:#24a3ff;
  box-shadow:0px 0px 20px rgba(36, 163, 255, 0.5);
  font-size:14px;
  font-weight:700;
  color:#ffffff;
  cursor:pointer;
}
.news__action-button:hover{
  background-color:#0085ff;
}
.news__action-button:active{
  background-color:#006ccf;
  box-shadow:none;
}
@media (min-width: 576px){
  .page-header__grid{
    top:50px;
    gap:10px 20px;
    grid-template-areas:"logo actions" "logo menu";
  }
  .actions{
    justify-content:flex-end;
  }
  .actions a{
    color:#ffffff;
  }
}
@media (min-width: 768px){
  .page-header__content::before{
    content:"";
    background-image:url(../img/Frame2.svg);
    background-repeat:no-repeat;
    background-position:50% 100%;
    position:absolute;
    top:0;
    right:0;
    bottom:0;
    left:0;
  }
  .menu__btn{
    display:none;
  }
  .menu__list{
    display:flex;
    justify-content:flex-end;
    gap:15px;
  }
  .menu__link{
    padding:0.25em 0;
  }
}
@media (min-width: 1200px){
  .page-header::before{
    position:absolute;
    top:0;
    left:0;
    width:418px;
    height:318px;
    content:"";
    background-image:url(../img/Frame2.svg);
    background-repeat:no-repeat;
    background-position:100% 100%;
  }
  .page-header::after{
    position:absolute;
    right:0;
    bottom:0;
    width:376px;
    height:100px;
    content:"";
    background-image:url(../img/Frame2.svg);
    background-repeat:no-repeat;
    background-position:0 0;
  }
}
@media (max-width: 1360px){
  .best__flex{
    justify-content:center;
  }
}
@media (max-width: 1050px){
  .slide__quote{
    font-size:36px;
    line-height:2.68rem;
  }
}
@media (max-width: 991.8px){
  .services__inner{
    padding-bottom:40px;
  }
  .services__options-checks{
    display:none;
  }
  .services__options{
    display:block;
  }
  .mobile-dots{
    display:flex;
    gap:14px;
    justify-content:center;
  }
  .mobile-subheading{
    display:block;
    text-transform:uppercase;
    letter-spacing:1px;
    color:#f0145a;
    background:linear-gradient(90.13deg, #EF8080 0.84%, #F0145A 99.96%);
    background-clip:text;
    -webkit-background-clip:text;
    -webkit-text-fill-color:transparent;
    margin-bottom:10px;
  }
  .slide{
    display:block;
    padding:20px;
  }
  .slide__images{
    display:none;
  }
  .slide__text{
    padding:0;
  }
  .slide__quote{
    margin-bottom:10px;
  }
  .slide__author-image{
    display:block;
  }
  .clients__logo{
    width:100%;
  }
}
@media (max-width: 991.8px) and (min-width: 420px){
  .abilities{
    padding:40px 20px;
  }
  .services__text{
    margin-bottom:80px;
  }
  .services__heading{
    font-size:26px;
  }
  .services__descr{
    font-size:20px;
  }
  .best__flex{
    justify-content:center;
  }
  .clients__grid-item{
    height:100px;
  }
}
@media (max-width: 991.8px) and (min-width: 768px){
  .clients__grid{
    grid-template-columns:1fr 1fr 1fr;
  }
}
@media (max-width: 883px){
  .cases__grid-first{
    display:block;
  }
  .cases__grid-item{
    margin-bottom:2px;
  }
  .item-capt{
    border-radius:12px 12px 0 0;
  }
  .item-acomp2{
    border-radius:0;
  }
  .cases__grid-second{
    display:block;
  }
  .item-repres{
    border-radius:0;
  }
  .item-acomp3{
    border-radius:0 0 12px 12px;
  }
}
@media (max-width: 767.8px){
  .menu__list{
    position:absolute;
    top:100%;
    right:0;
    left:0;
    display:none;
    padding:20px;
    text-align:center;
    background-color:rgba(50, 50, 100, 0.9);
    box-shadow:1px 3px 10px rgba(0, 0, 0, 0.5);
  }
  .menu__link{
    padding:0.5em 1em;
  }
  .actions__locations{
    display:none;
  }
  .clients__grid{
    grid-template-columns:1fr 1fr;
  }
}
@media (max-width: 575.8px){
  .page-header__grid{
    top:20px;
    align-items:center;
    gap:20px;
    grid-template-areas:"actions actions" "logo menu";
  }
  .logo__image{
    width:120px;
  }
  .actions{
    justify-content:space-between;
  }
  .actions a{
    color:#b3b3ba;
  }
  .actions__socials{
    display:none;
  }
}
@media (max-width: 419.8px){
  .section-caption{
    font-size:32px;
    line-height:2.375rem;
  }
  .abilities{
    padding:40px 0 20px;
  }
  .services__text{
    margin-bottom:20px;
    min-height:410px;
  }
  .services__heading{
    font-size:22px;
    line-height:1.625rem;
  }
  .services__descr{
    font-size:18px;
    line-height:1.625rem;
  }
  .best__item-header{
    display:flex;
    gap:10px;
    align-items:center;
    margin-bottom:10px;
  }
  .best__item-picture{
    width:64px;
    height:64px;
  }
  .best__picture{
    margin:0;
  }
  .best__item-caption{
    font-size:18px;
    line-height:1.312rem;
    margin:0;
  }
  .best__item-text{
    font-size:16px;
    line-height:1.375rem;
  }
  .best__caption{
    margin-bottom:20px;
  }
  .slide__quote{
    font-size:32px;
    line-height:2.375rem;
  }
  .team{
    padding:40px 0 30px;
  }
  .team__actions{
    padding-top:15px;
  }
  .cases__grid-item{
    padding:20px;
  }
  .cases__grid-caption{
    font-size:18px;
    line-height:1.312rem;
    margin-bottom:10px;
  }
  .clients__grid-item{
    height:90px;
  }
  .news__caption{
    margin-bottom:20px;
  }
  .news__content-item{
    margin-bottom:20px;
  }
  .news__content-date::after{
    display:none;
  }
  .news__content-descr{
    display:none;
  }
  .news__action{
    background:transparent;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */